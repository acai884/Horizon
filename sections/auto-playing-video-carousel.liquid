{% comment %}
  检查是否已加载Swiper库，如果没有则加载CDN版本
{% endcomment %}

<!-- 资源预连接优化 -->
<link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin>
<link rel="preconnect" href="https://www.youtube.com" crossorigin>
<link rel="preconnect" href="https://i.ytimg.com" crossorigin>

{% unless settings.swiper_loaded %}
  <link rel="preload" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css" as="style">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css">
  <script defer src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
{% endunless %}

<style>
  /* CSS变量定义 */
  .section-{{ section.id }} {
    --card-border-radius: 26px;
    --card-bg-color: #f5f5f5;
    --card-padding: 30px;
    --title-font-size: 28px;
    --title-color: #000000;
    --description-font-size: 18px;
    --description-color: #666666;
    --container-max-width: {% if section.settings.container_max_width == 'full' %}100%{% else %}{{ section.settings.container_max_width }}px{% endif %};
    --mobile-container-max-width: {% if section.settings.mobile_container_max_width == 'full' %}100%{% else %}{{ section.settings.mobile_container_max_width }}px{% endif %};
    --container-padding: {{ section.settings.container_padding }}px;
    --mobile-container-padding: {{ section.settings.mobile_container_padding }}px;
    --desktop-card-height: {{ section.settings.desktop_card_height }}px;
    --tablet-card-height: {{ section.settings.tablet_card_height }}px;
    --mobile-card-height: {{ section.settings.mobile_card_height }}px;
    --video-aspect-ratio: {{ section.settings.video_aspect_ratio }};
    --mobile-card-margin: {{ section.settings.mobile_spacing }}px;
    --mobile-title-font-size: {{ section.settings.card_title_font_size_mobile }}px;
    --mobile-description-font-size: {{ section.settings.card_description_font_size_mobile }}px;
  }

  .section-{{ section.id }} {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    background-color: {{ section.settings.bg_color }};
  }

  .video-carousel-container {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    container-type: inline-size; /* 启用容器查询 */
  }

  .video-carousel-title {
    text-align: center;
    margin-bottom: var(--title-margin-bottom, 30px);
    font-size: var(--title-font-size, 28px);
    color: var(--title-color, #000000);
    font-weight: var(--title-font-weight, bold);
  }

  /* Swiper容器样式 */
  .swiper-container {
    width: 100%;
    overflow: hidden;
    position: relative;
    contain: layout style paint;
  }

  .swiper-wrapper {
    display: flex;
    transition-property: transform;
    will-change: transform;
  }

  /* 卡片样式 */
  .swiper-slide {
    width: 100%;
    flex-shrink: 0;
    max-height: var(--desktop-card-height, 500px);
    contain: layout style paint;
  }

  .video-card {
    background-color: var(--card-bg-color);
    border-radius: var(--card-border-radius);
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    will-change: transform;
    backface-visibility: hidden;
  }

  .video-card:hover {
    transform: translate3d(0, -5px, 0);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  /* 视频容器样式 */
  .video-container {
    position: relative;
    width: 100%;
    aspect-ratio: var(--video-aspect-ratio, 16/10);
    overflow: hidden;
  }

  .video-container video,
  .carousel-video,
  .carousel-video-wrapper iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-top-left-radius: var(--card-border-radius);
    border-top-right-radius: var(--card-border-radius);
  }

  .carousel-video-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }

  /* 卡片内容样式 */
  .card-content {
    padding: var(--card-padding);
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }

  .card-title {
    font-size: var(--title-font-size);
    color: var(--title-color);
    margin: 0 0 16px 0;
    font-weight: 600;
    line-height: 1.3;
  }

  .card-description {
    font-size: var(--description-font-size);
    color: var(--description-color);
    margin: 0;
    line-height: 1.6;
  }

  /* 导航箭头样式 */
  .swiper-button-next,
  .swiper-button-prev {
    color: {{ section.settings.nav_arrow_color }};
    background-color: {{ section.settings.nav_arrow_bg }};
    width: {{ section.settings.nav_arrow_size }}px;
    height: {{ section.settings.nav_arrow_size }}px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
  }

  .swiper-button-next:hover,
  .swiper-button-prev:hover {
    background-color: {{ section.settings.nav_arrow_hover_bg }};
    transform: scale(1.1);
  }

  .swiper-button-next::after,
  .swiper-button-prev::after {
    font-size: {{ section.settings.nav_arrow_icon_size }}px;
  }

  /* 平板端样式 */
  @media screen and (min-width: 769px) and (max-width: 1024px) {
    .swiper-slide {
      max-height: var(--tablet-card-height, 400px);
    }
  }

  /* 桌面端样式 */
  @media screen and (min-width: 1025px) {
    .swiper-slide {
      max-height: var(--desktop-card-height, 450px);
    }
    
    {% if section.settings.enable_sneak_peak_desktop %}
    .swiper-slide {
      width: 50%;
      transition: all 0.3s ease;
    }
    
    .swiper-slide-active {
      width: 60% !important;
      opacity: 1;
      transform: scale(1);
      z-index: 10;
    }
    
    .swiper-slide-next,
    .swiper-slide-prev {
      width: 40% !important;
      opacity: 0.85;
      transform: scale(0.9);
      z-index: 5;
    }
    {% endif %}
  }

  /* 移动端样式 */
  @media (max-width: 768px) {
    .video-carousel-container {
      max-width: var(--mobile-container-max-width);
      padding: 0 var(--mobile-container-padding);
    }
    
    .swiper-slide {
      max-height: var(--mobile-card-height);
      flex-shrink: 0;
    }
    
    .card-title {
      font-size: var(--mobile-title-font-size);
    }
    
    .card-description {
      font-size: var(--mobile-description-font-size);
    }
  }
</style>

<section class="section-{{ section.id }}">
  <div class="video-carousel-container">
    <div class="swiper-container video-carousel-{{ section.id }}">
      <div class="swiper-wrapper">
        {% for block in section.blocks %}
          <div class="swiper-slide block-{{ block.id }}" data-block-id="{{ block.id }}" {{ block.shopify_attributes }}>
            <div class="video-card" style="
              --card-bg-color: {{ block.settings.card_bg_color }};
              --card-border-radius: {{ block.settings.card_border_radius }}px;
            ">
              <div class="video-container">
                {% if block.settings.video_source == 'shopify' and block.settings.video != blank %}
                  {% render 'video',
                    video: block.settings.video,
                    video_class: 'carousel-video',
                    video_autoplay: false,
                    video_loop: true,
                    video_style: 'width: 100%; height: 100%; object-fit: cover;',
                    disable_controls: true,
                    additional_attributes: 'loop muted playsinline preload="metadata"'
                  %}
                {% elsif block.settings.video_source == 'youtube' and block.settings.video_url != blank %}
                  <div class="carousel-video-wrapper">
                    <iframe
                      id="youtube-{{ section.id }}-{{ block.id }}"
                      class="carousel-video swiper-lazy"
                      data-src="https://www.youtube.com/embed/{{ block.settings.video_url.id }}?autoplay=0&mute=1&loop=1&playlist={{ block.settings.video_url.id }}&controls=0&showinfo=0&modestbranding=1&rel=0&enablejsapi=1"
                      frameborder="0"
                      allow="autoplay; encrypted-media"
                      allowfullscreen
                      loading="lazy"
                      style="width: 100%; height: 100%; position: absolute; top: 0; left: 0; border-top-left-radius: var(--card-border-radius); border-top-right-radius: var(--card-border-radius);"
                    ></iframe>
                  </div>
                {% else %}
                  <div class="video-placeholder" style="
                    width: 100%;
                    height: 100%;
                    background-color: #e0e0e0;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    border-top-left-radius: var(--card-border-radius);
                    border-top-right-radius: var(--card-border-radius);
                  ">
                    <span style="color: #999; font-size: 18px;">视频占位符</span>
                  </div>
                {% endif %}
              </div>
              
              <div class="card-content">
                {% if block.settings.title != blank %}
                  <h3 class="card-title" style="
                    font-size: {{ block.settings.title_font_size }}px;
                    color: {{ block.settings.title_color }};
                  ">{{ block.settings.title }}</h3>
                {% endif %}
                
                {% if block.settings.description != blank %}
                  <p class="card-description" style="
                    font-size: {{ block.settings.description_font_size }}px;
                    color: {{ block.settings.description_color }};
                  ">{{ block.settings.description }}</p>
                {% endif %}
              </div>
            </div>
          </div>
        {% endfor %}
      </div>
      
      <div class="swiper-button-next"></div>
      <div class="swiper-button-prev"></div>
    </div>
  </div>
</section>

<script>
  (function() {
    'use strict';
    
    // 防抖函数
    function debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    }
    
    // 视频管理类
    class VideoManager {
      constructor() {
        this.activeVideos = new Set();
        this.youtubePlayersReady = false;
        this.youtubePlayers = new Map();
        this.loadYouTubeAPI();
      }
      
      loadYouTubeAPI() {
        // 加载 YouTube IFrame API
        if (!window.YT) {
          const tag = document.createElement('script');
          tag.src = 'https://www.youtube.com/iframe_api';
          const firstScriptTag = document.getElementsByTagName('script')[0];
          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
          
          window.onYouTubeIframeAPIReady = () => {
            this.youtubePlayersReady = true;
          };
        } else {
          this.youtubePlayersReady = true;
        }
      }
      
      initYouTubePlayer(iframe) {
        if (!this.youtubePlayersReady || !window.YT || !iframe.id) return null;
        
        try {
          const player = new YT.Player(iframe.id, {
            events: {
              'onReady': (event) => {
                this.youtubePlayers.set(iframe.id, event.target);
              }
            }
          });
          return player;
        } catch (e) {
          console.warn('YouTube 播放器初始化失败:', e);
          return null;
        }
      }
      
      playVideo(slide) {
        if (!slide) return;
        
        const video = slide.querySelector('video');
        const iframe = slide.querySelector('iframe.carousel-video');
        
        if (video && !this.activeVideos.has(video)) {
          if (!video.hasAttribute('data-loaded')) {
            video.setAttribute('data-loaded', 'true');
          }
          
          video.play().catch(e => {
            console.warn('视频播放失败:', e);
          });
          this.activeVideos.add(video);
        }
        
        // 处理 YouTube iframe
        if (iframe) {
          if (iframe.hasAttribute('data-src')) {
            iframe.src = iframe.getAttribute('data-src');
            iframe.removeAttribute('data-src');
          }
          
          // 使用 YouTube API 控制播放
          if (this.youtubePlayersReady && iframe.id) {
            const player = this.youtubePlayers.get(iframe.id);
            if (player && player.playVideo) {
              try {
                player.playVideo();
              } catch (e) {
                console.warn('YouTube 播放失败:', e);
              }
            }
          }
        }
      }
      
      pauseVideo(slide) {
        if (!slide) return;
        
        const video = slide.querySelector('video');
        const iframe = slide.querySelector('iframe.carousel-video');
        
        if (video) {
          video.pause();
          this.activeVideos.delete(video);
        }
        
        // 暂停 YouTube 视频
        if (iframe && iframe.id) {
          const player = this.youtubePlayers.get(iframe.id);
          if (player && player.pauseVideo) {
            try {
              player.pauseVideo();
            } catch (e) {
              console.warn('YouTube 暂停失败:', e);
            }
          }
        }
      }
      
      pauseAllVideos(slides) {
        slides.forEach(slide => this.pauseVideo(slide));
      }
      
      cleanup() {
        this.activeVideos.clear();
        this.youtubePlayers.forEach((player, id) => {
          try {
            if (player.destroy) {
              player.destroy();
            }
          } catch (e) {
            console.warn('YouTube 播放器销毁失败:', e);
          }
        });
        this.youtubePlayers.clear();
      }
    }
    
    // 轮播管理类
    class CarouselManager {
      constructor(sectionId, settings) {
        this.sectionId = sectionId;
        this.settings = settings;
        this.swiper = null;
        this.videoManager = new VideoManager();
        this.intersectionObserver = null;
        this.isVisible = true;
        this.container = document.querySelector(`.video-carousel-${sectionId}`);
        
        if (!this.container) {
          console.warn('轮播容器未找到');
          return;
        }
        
        this.init();
        this.setupIntersectionObserver();
      }
      
      init() {
        // 销毁现有实例
        this.destroy();
        
        // 创建配置
        const config = this.createSwiperConfig();
        
        // 初始化 Swiper
        this.swiper = new Swiper(`.video-carousel-${this.sectionId}`, config);
      }
      
      createSwiperConfig() {
        const self = this;
        
        return {
          loop: true,
          autoplay: {
            delay: this.settings.autoplayDelay,
            disableOnInteraction: false,
            pauseOnMouseEnter: true
          },
          lazy: {
            loadPrevNext: true,
            loadPrevNextAmount: 1
          },
          grabCursor: true,
          watchSlidesProgress: true,
          
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          
          breakpoints: {
            0: {
              effect: 'slide',
              slidesPerView: this.settings.mobileItems,
              centeredSlides: false,
              spaceBetween: this.settings.mobileSpacing
            },
            769: {
              effect: 'slide',
              slidesPerView: this.settings.tabletItems,
              centeredSlides: false,
              spaceBetween: this.settings.tabletSpacing
            },
            1025: {
              effect: this.settings.enableSneakPeakDesktop ? 'coverflow' : 'slide',
              slidesPerView: 'auto',
              centeredSlides: this.settings.enableSneakPeakDesktop,
              spaceBetween: 16,
              coverflowEffect: this.settings.enableSneakPeakDesktop ? {
                rotate: 0,
                stretch: 0,
                depth: 100,
                modifier: 2,
                slideShadows: false
              } : undefined
            }
          },
          
          on: {
            init: function() {
              // 只播放初始活动幻灯片的视频
              const activeSlide = this.slides[this.activeIndex];
              self.videoManager.playVideo(activeSlide);
              
              // 预加载相邻幻灯片
              self.preloadAdjacentSlides(this);
            },
            
            slideChange: function() {
              // 暂停所有视频
              self.videoManager.pauseAllVideos(this.slides);
              
              // 只播放当前活动幻灯片的视频
              const activeSlide = this.slides[this.activeIndex];
              self.videoManager.playVideo(activeSlide);
              
              // 预加载相邻幻灯片
              self.preloadAdjacentSlides(this);
            },
            
            slideChangeTransitionStart: function() {
              // 在过渡开始时暂停所有视频，减少性能开销
              self.videoManager.pauseAllVideos(this.slides);
            }
          }
        };
      }
      
      preloadAdjacentSlides(swiper) {
        // 预加载下一张和上一张幻灯片的视频
        const nextSlide = swiper.slides[swiper.activeIndex + 1];
        const prevSlide = swiper.slides[swiper.activeIndex - 1];
        
        [nextSlide, prevSlide].forEach(slide => {
          if (slide) {
            const video = slide.querySelector('video');
            if (video && !video.hasAttribute('data-loaded')) {
              video.setAttribute('data-loaded', 'true');
              video.load();
            }
          }
        });
      }
      
      setupIntersectionObserver() {
        // 使用 Intersection Observer 检测轮播是否在视口中
        if ('IntersectionObserver' in window) {
          this.intersectionObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
              this.isVisible = entry.isIntersecting;
              
              if (this.swiper) {
                if (entry.isIntersecting) {
                  // 轮播进入视口，恢复自动播放
                  this.swiper.autoplay.start();
                } else {
                  // 轮播离开视口，暂停自动播放和所有视频
                  this.swiper.autoplay.stop();
                  this.videoManager.pauseAllVideos(this.swiper.slides);
                }
              }
            });
          }, {
            threshold: 0.1,
            rootMargin: '50px'
          });
          
          if (this.container) {
            this.intersectionObserver.observe(this.container);
          }
        }
      }
      
      destroy() {
        if (this.swiper) {
          this.videoManager.pauseAllVideos(this.swiper.slides);
          this.swiper.destroy(true, true);
          this.swiper = null;
        }
        
        if (this.intersectionObserver) {
          this.intersectionObserver.disconnect();
          this.intersectionObserver = null;
        }
        
        this.videoManager.cleanup();
      }
      
      slideTo(index) {
        if (this.swiper) {
          this.swiper.slideTo(index);
        }
      }
    }
    
    // 初始化轮播
    function initCarousel() {
      const settings = {
        autoplayDelay: {{ section.settings.autoplay_delay }},
        enableSneakPeakDesktop: {{ section.settings.enable_sneak_peak_desktop | json }},
        mobileItems: {{ section.settings.mobile_items }},
        mobileSpacing: {{ section.settings.mobile_spacing }},
        tabletItems: {{ section.settings.tablet_items }},
        tabletSpacing: {{ section.settings.tablet_spacing }}
      };
      
      window.videoCarousel_{{ section.id }} = new CarouselManager('{{ section.id }}', settings);
    }
    
    // 防抖的初始化函数
    const debouncedInit = debounce(initCarousel, 150);
    
    // DOM 加载完成后初始化
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', initCarousel);
    } else {
      initCarousel();
    }
    
    // Shopify 主题编辑器事件监听
    if (typeof Shopify !== 'undefined' && Shopify.designMode) {
      document.addEventListener('shopify:section:load', function(event) {
        if (event.detail.sectionId === '{{ section.id }}') {
          debouncedInit();
        }
      });
      
      document.addEventListener('shopify:block:select', function(event) {
        if (event.detail.sectionId === '{{ section.id }}') {
          const carousel = window.videoCarousel_{{ section.id }};
          if (carousel) {
            const blockId = event.detail.blockId;
            const slides = document.querySelectorAll('.swiper-slide');
            
            let slideIndex = -1;
            slides.forEach((slide, index) => {
              const slideBlockId = slide.getAttribute('data-block-id');
              if (slideBlockId === blockId) {
                slideIndex = index;
              }
            });
            
            if (slideIndex === -1) {
              slideIndex = Array.from(slides).findIndex(slide => 
                slide.classList.contains(`block-${blockId}`)
              );
            }
            
            if (slideIndex !== -1) {
              carousel.slideTo(slideIndex);
            }
          }
        }
      });
      
      document.addEventListener('shopify:section:select', function(event) {
        if (event.detail.sectionId === '{{ section.id }}') {
          debouncedInit();
        }
      });
      
      document.addEventListener('shopify:section:unload', function(event) {
        if (event.detail.sectionId === '{{ section.id }}') {
          const carousel = window.videoCarousel_{{ section.id }};
          if (carousel) {
            carousel.destroy();
            delete window.videoCarousel_{{ section.id }};
          }
        }
      });
    }
    
    // 页面卸载时清理
    window.addEventListener('beforeunload', function() {
      const carousel = window.videoCarousel_{{ section.id }};
      if (carousel) {
        carousel.destroy();
      }
    });
  })();
</script>

{% schema %}
{
  "name": "视频轮播",
  "settings": [
    {
      "type": "header",
      "content": "轮播设置"
    },
    {
      "type": "header",
      "content": "桌面端设置"
    },
    {
      "type": "range",
      "id": "desktop_card_height",
      "min": 300,
      "max": 800,
      "step": 10,
      "unit": "px",
      "label": "卡片高度",
      "default": 500,
      "info": "设置桌面端视频轮播卡片的高度"
    },
    {
      "type": "range",
      "id": "desktop_items",
      "min": 1,
      "max": 5,
      "step": 1,
      "unit": "个",
      "label": "可见卡片数量",
      "default": 3
    },
    {
      "type": "range",
      "id": "desktop_spacing",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "卡片间距",
      "default": 16
    },
    {
      "type": "checkbox",
      "id": "enable_sneak_peak_desktop",
      "label": "启用偷窥效果",
      "default": true,
      "info": "启用后，左右两侧卡片会部分可见，突出中间卡片"
    },
    {
      "type": "header",
      "content": "平板端设置"
    },
    {
      "type": "range",
      "id": "tablet_card_height",
      "min": 250,
      "max": 600,
      "step": 10,
      "unit": "px",
      "label": "卡片高度",
      "default": 400,
      "info": "设置平板端视频轮播卡片的高度"
    },
    {
      "type": "range",
      "id": "tablet_items",
      "min": 1,
      "max": 4,
      "step": 1,
      "unit": "个",
      "label": "可见卡片数量",
      "default": 3
    },
    {
      "type": "range",
      "id": "tablet_spacing",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "卡片间距",
      "default": 16
    },
    {
      "type": "checkbox",
      "id": "enable_sneak_peak_tablet",
      "label": "启用偷窥效果",
      "default": true,
      "info": "启用后，左右两侧卡片会部分可见，突出中间卡片"
    },
    {
      "type": "header",
      "content": "移动端设置"
    },
    {
      "type": "range",
      "id": "mobile_card_height",
      "min": 200,
      "max": 500,
      "step": 10,
      "unit": "px",
      "label": "卡片高度",
      "default": 300,
      "info": "设置移动端视频轮播卡片的高度"
    },
    {
      "type": "range",
      "id": "mobile_items",
      "min": 1,
      "max": 3,
      "step": 1,
      "unit": "个",
      "label": "可见卡片数量",
      "default": 1
    },
    {
      "type": "range",
      "id": "mobile_spacing",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "卡片间距",
      "default": 16
    },
    {
      "type": "checkbox",
      "id": "enable_sneak_peak_mobile",
      "label": "启用偷窥效果",
      "default": false,
      "info": "移动端不建议启用偷窥效果，以保持简洁的用户体验和更好的性能"
    },
    {
      "type": "header",
      "content": "视频设置"
    },
    {
      "type": "select",
      "id": "video_aspect_ratio",
      "label": "视频宽高比",
      "options": [
        {
          "value": "16/9",
          "label": "16:9 (宽屏)"
        },
        {
          "value": "16/10",
          "label": "16:10 (标准宽屏)"
        },
        {
          "value": "4/3",
          "label": "4:3 (传统)"
        },
        {
          "value": "1/1",
          "label": "1:1 (正方形)"
        },
        {
          "value": "9/16",
          "label": "9:16 (竖屏)"
        }
      ],
      "default": "16/10",
      "info": "设置视频区域的宽高比"
    },
    {
      "type": "header",
      "content": "自动播放设置"
    },
    {
      "type": "range",
      "id": "autoplay_delay",
      "min": 2000,
      "max": 9000,
      "step": 500,
      "unit": "ms",
      "label": "自动播放延迟时间",
      "default": 5000
    },
    {
      "type": "header",
      "content": "导航箭头设置"
    },
    {
      "type": "color",
      "id": "nav_arrow_color",
      "label": "箭头颜色",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "nav_arrow_bg",
      "label": "箭头背景色",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "nav_arrow_hover_bg",
      "label": "箭头悬停背景色",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "nav_arrow_size",
      "min": 30,
      "max": 80,
      "step": 5,
      "unit": "px",
      "label": "箭头大小",
      "default": 50
    },
    {
      "type": "range",
      "id": "nav_arrow_icon_size",
      "min": 12,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "箭头图标大小",
      "default": 20
    },
    {
      "type": "header",
      "content": "容器设置"
    },
    {
      "type": "select",
      "id": "container_max_width",
      "label": "桌面端容器最大宽度",
      "options": [
        {
          "value": "full",
          "label": "全宽"
        },
        {
          "value": "1200",
          "label": "1200px"
        },
        {
          "value": "1400",
          "label": "1400px"
        },
        {
          "value": "1600",
          "label": "1600px"
        },
        {
          "value": "1800",
          "label": "1800px"
        },
        {
          "value": "2000",
          "label": "2000px"
        },
        {
          "value": "2400",
          "label": "2400px"
        }
      ],
      "default": "1400"
    },
    {
      "type": "select",
      "id": "mobile_container_max_width",
      "label": "移动端容器最大宽度",
      "options": [
        {
          "value": "full",
          "label": "全宽"
        },
        {
          "value": "480",
          "label": "480px"
        },
        {
          "value": "640",
          "label": "640px"
        },
        {
          "value": "768",
          "label": "768px"
        }
      ],
      "default": "full"
    },
    {
      "type": "range",
      "id": "container_padding",
      "min": 0,
      "max": 50,
      "step": 5,
      "unit": "px",
      "label": "桌面端容器左右内边距",
      "default": 20
    },
    {
      "type": "range",
      "id": "mobile_container_padding",
      "min": 0,
      "max": 30,
      "step": 2,
      "unit": "px",
      "label": "移动端容器左右内边距",
      "default": 14
    },
    {
      "type": "header",
      "content": "分区设置"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "背景颜色",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "上内边距",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 5,
      "unit": "px",
      "label": "下内边距",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "slide",
      "name": "视频",
      "settings": [
        {
          "type": "header",
          "content": "视频来源"
        },
        {
          "type": "select",
          "id": "video_source",
          "label": "视频来源",
          "options": [
            {
              "value": "shopify",
              "label": "Shopify视频库"
            },
            {
              "value": "youtube",
              "label": "YouTube链接"
            }
          ],
          "default": "shopify"
        },
        {
          "type": "video",
          "id": "video",
          "label": "选择视频",
          "info": "从Shopify视频库中选择视频"
        },
        {
          "type": "video_url",
          "id": "video_url",
          "label": "YouTube视频链接",
          "accept": ["youtube"],
          "info": "输入YouTube视频链接"
        },
        {
          "type": "header",
          "content": "卡片设置"
        },
        {
          "type": "color",
          "id": "card_bg_color",
          "label": "卡片背景色",
          "default": "#f5f5f5"
        },
        {
          "type": "range",
          "id": "card_border_radius",
          "min": 0,
          "max": 50,
          "step": 2,
          "unit": "px",
          "label": "卡片圆角",
          "default": 26
        },
        {
          "type": "header",
          "content": "标题设置"
        },
        {
          "type": "text",
          "id": "title",
          "label": "标题",
          "default": "视频标题"
        },
        {
          "type": "range",
          "id": "title_font_size",
          "min": 14,
          "max": 36,
          "step": 1,
          "unit": "px",
          "label": "标题字体大小",
          "default": 28
        },
        {
          "type": "range",
          "id": "card_title_font_size_mobile",
          "min": 12,
          "max": 28,
          "step": 1,
          "unit": "px",
          "label": "移动端标题字体大小",
          "default": 20
        },
        {
          "type": "color",
          "id": "title_color",
          "label": "标题颜色",
          "default": "#000000"
        },
        {
          "type": "header",
          "content": "描述设置"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "描述",
          "default": "这是视频的描述文字，可以介绍视频的内容和特点。"
        },
        {
          "type": "range",
          "id": "description_font_size",
          "min": 12,
          "max": 24,
          "step": 1,
          "unit": "px",
          "label": "描述字体大小",
          "default": 18
        },
        {
          "type": "range",
          "id": "card_description_font_size_mobile",
          "min": 10,
          "max": 20,
          "step": 1,
          "unit": "px",
          "label": "移动端描述字体大小",
          "default": 14
        },
        {
          "type": "color",
          "id": "description_color",
          "label": "描述颜色",
          "default": "#666666"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "视频轮播",
      "blocks": [
        {
          "type": "slide",
          "settings": {
            "title": "示例视频 1",
            "description": "这是第一个示例视频的描述文字。"
          }
        },
        {
          "type": "slide",
          "settings": {
            "title": "示例视频 2",
            "description": "这是第二个示例视频的描述文字。"
          }
        },
        {
          "type": "slide",
          "settings": {
            "title": "示例视频 3",
            "description": "这是第三个示例视频的描述文字。"
          }
        }
      ]
    }
  ]
}
{% endschema %}